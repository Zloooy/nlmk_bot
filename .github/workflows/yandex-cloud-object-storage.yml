name: Deploy frontend

on:
  push:
    branches:
      - main
    paths:
      - frontend/**
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          check-latest: true
          cache-dependency-path: frontend/package.json
      - name: Restore cached dependencies
        id: cache-deps-restore
        uses: actions/cache/restore@v4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-deps
      - name: Install
        run: npm install
      - name: Cache dependencies
        id: cache-deps-save
        uses: actions/cache/save@v4
        with:
          path: frontend/node_modules
          key: ${{ steps.cache-deps-restore.outputs.cache-primary-key }}
      - name: Generate API
        run: npm run generate-api
      - name: Build
        run: npm run build
        env:
          VITE_DIGEST_TEMPLATE_EDIT_URL: ${{ vars.DIGEST_TEMPLATE_EDIT_URL }}
          VITE_PARSING_SITES_TABLE_URL: ${{ vars.PARSING_SITES_TABLE_URL }}
          VITE_EXTRACTED_NEWS_TABLE_URL: ${{ vars.EXTRACTED_NEWS_TABLE_URL }}
          VITE_RANKED_NEWS_TABLE_URL: ${{ vars.RANKED_NEWS_TABLE_URL }}
          VITE_SUMMARIZED_NEWS_TABLE_URL: ${{ vars.SUMMARIZED_NEWS_TABLE_URL }}
          VITE_RANKING_LANG_SMITH_URL: ${{ vars.RANKING_LANG_SMITH_URL }}
          VITE_PARSING_LANG_SMITH_URL: ${{ vars.PARSING_LANG_SMITH_URL }}
          VITE_SUMMARIZING_LANG_SMITH_URL: ${{ vars.SUMMARIZING_LANG_SMITH_URL }}
      - name: Deploy
        uses: nekitcorp/yandex-storage-website-action@v2
        with:
          access-key-id: ${{ secrets.FRONTEND_DEPLOY_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.FRONTEND_DEPLOY_SECRET_ACCESS_KEY }}
          bucket: ${{ secrets.FRONTEND_BUCKET }}
          working-directory: frontend/dist
          clear: true
